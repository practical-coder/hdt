// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/haproxytech/client-native/v4/models"
	"github.com/spf13/cobra"
)

// Schema cli for SpoeGroup

// register flags to command
func registerModelSpoeGroupFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerSpoeGroupMessages(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerSpoeGroupName(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerSpoeGroupMessages(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	messagesDescription := ``

	var messagesFlagName string
	if cmdPrefix == "" {
		messagesFlagName = "messages"
	} else {
		messagesFlagName = fmt.Sprintf("%v.messages", cmdPrefix)
	}

	var messagesFlagDefault string

	_ = cmd.PersistentFlags().String(messagesFlagName, messagesFlagDefault, messagesDescription)

	return nil
}

func registerSpoeGroupName(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	nameDescription := `Required. `

	var nameFlagName string
	if cmdPrefix == "" {
		nameFlagName = "name"
	} else {
		nameFlagName = fmt.Sprintf("%v.name", cmdPrefix)
	}

	var nameFlagDefault string

	_ = cmd.PersistentFlags().String(nameFlagName, nameFlagDefault, nameDescription)

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelSpoeGroupFlags(depth int, m *models.SpoeGroup, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, messagesAdded := retrieveSpoeGroupMessagesFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || messagesAdded

	err, nameAdded := retrieveSpoeGroupNameFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || nameAdded

	return nil, retAdded
}

func retrieveSpoeGroupMessagesFlags(depth int, m *models.SpoeGroup, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	messagesFlagName := fmt.Sprintf("%v.messages", cmdPrefix)
	if cmd.Flags().Changed(messagesFlagName) {

		var messagesFlagName string
		if cmdPrefix == "" {
			messagesFlagName = "messages"
		} else {
			messagesFlagName = fmt.Sprintf("%v.messages", cmdPrefix)
		}

		messagesFlagValue, err := cmd.Flags().GetString(messagesFlagName)
		if err != nil {
			return err, false
		}
		m.Messages = messagesFlagValue

		retAdded = true
	}

	return nil, retAdded
}

func retrieveSpoeGroupNameFlags(depth int, m *models.SpoeGroup, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	nameFlagName := fmt.Sprintf("%v.name", cmdPrefix)
	if cmd.Flags().Changed(nameFlagName) {

		var nameFlagName string
		if cmdPrefix == "" {
			nameFlagName = "name"
		} else {
			nameFlagName = fmt.Sprintf("%v.name", cmdPrefix)
		}

		nameFlagValue, err := cmd.Flags().GetString(nameFlagName)
		if err != nil {
			return err, false
		}
		m.Name = &nameFlagValue

		retAdded = true
	}

	return nil, retAdded
}
